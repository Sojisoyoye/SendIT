{"version":3,"sources":["parcels.js"],"names":["ParcelsController","req","res","status","send","success","message","parcels","users","findUser","find","user","id","parseInt","params","json","User","findParcel","parcel","Parcel","body","userid","sendername","receivername","pickuplocation","destination","packagecontent","weight","price","length","push","map","index","splice","parcelFound","itemIndex","updatedParcel","parcelController"],"mappings":";;;;;;qjBAAA;AACA;AACA;;;AACA;;;;AACA;;;;;;;;IAEMA,iB;;;;;;;kCACUC,G,EAAKC,G,EAAK;AACtB,aAAOA,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,MADiB;AAE1BC,iBAAS,gCAFiB;AAG1BC;AAH0B,OAArB,CAAP;AAKD;;;uCAEkBN,G,EAAKC,G,EAAK;AAC3B,aAAOA,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,MADiB;AAE1BC,iBAAS,sCAFiB;AAG1BC,iBAASC;AAHiB,OAArB,CAAP;AAKD;;;8CAEyBP,G,EAAKC,G,EAAK;AAClC,UAAMO,WAAWD,aAAME,IAAN,CAAW;AAAA,eAAQC,KAAKC,EAAL,KAAYC,SAASZ,IAAIa,MAAJ,CAAWF,EAApB,EAAwB,EAAxB,CAApB;AAAA,OAAX,CAAjB;AACA,UAAIH,QAAJ,EAAc;AACZ,eAAOP,IAAIC,MAAJ,CAAW,GAAX,EAAgBY,IAAhB,CAAqB;AAC1BC,gBAAMP,QADoB;AAE1BH,mBAAS;AAFiB,SAArB,CAAP;AAID;AACD,aAAOJ,IAAIC,MAAJ,CAAW,GAAX,EAAgBY,IAAhB,CAAqB;AAC1BT,iBAAS;AADiB,OAArB,CAAP;AAGD;;;sCAEiBL,G,EAAKC,G,EAAK;AAC1B,UAAMe,aAAaV,aAAQG,IAAR,CAAa;AAAA,eAAUQ,OAAON,EAAP,KAAcC,SAASZ,IAAIa,MAAJ,CAAWF,EAApB,EAAwB,EAAxB,CAAxB;AAAA,OAAb,CAAnB;AACA,UAAIK,UAAJ,EAAgB;AACd,eAAOf,IAAIC,MAAJ,CAAW,GAAX,EAAgBY,IAAhB,CAAqB;AAC1BI,kBAAQF,UADkB;AAE1BX,mBAAS;AAFiB,SAArB,CAAP;AAID;AACD,aAAOJ,IAAIC,MAAJ,CAAW,GAAX,EAAgBY,IAAhB,CAAqB;AAC1BT,iBAAS;AADiB,OAArB,CAAP;AAGD;;;iCAEYL,G,EAAKC,G,EAAK;AACrB,UAAI,CAACD,IAAImB,IAAJ,CAASC,MAAd,EAAsB;AACpB,eAAOnB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASE,UAAd,EAA0B;AAC1B,eAAOpB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASG,YAAd,EAA4B;AAC5B,eAAOrB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASI,cAAd,EAA8B;AAC9B,eAAOtB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASK,WAAd,EAA2B;AAC3B,eAAOvB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASM,cAAd,EAA8B;AAC9B,eAAOxB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASO,MAAd,EAAsB;AACtB,eAAOzB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASQ,KAAd,EAAqB;AACrB,eAAO1B,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;;AAED,UAAMY,SAAS;AACbN,YAAIL,aAAQsB,MAAR,GAAiB,CADR;AAEbR,gBAAQpB,IAAImB,IAAJ,CAASC,MAFJ;AAGbC,oBAAYrB,IAAImB,IAAJ,CAASE,UAHR;AAIbC,sBAActB,IAAImB,IAAJ,CAASG,YAJV;AAKbC,wBAAgBvB,IAAImB,IAAJ,CAASI,cALZ;AAMbC,qBAAaxB,IAAImB,IAAJ,CAASK,WANT;AAObC,wBAAgBzB,IAAImB,IAAJ,CAASM,cAPZ;AAQbC,gBAAQ1B,IAAImB,IAAJ,CAASO,MARJ;AASbC,eAAO3B,IAAImB,IAAJ,CAASQ;AATH,OAAf;AAWArB,mBAAQuB,IAAR,CAAaZ,MAAb;AACA,aAAOhB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,MADiB;AAE1BC,iBAAS,2BAFiB;AAG1BY;AAH0B,OAArB,CAAP;AAKD;;;iCAEYjB,G,EAAKC,G,EAAK;AACrB,UAAMU,KAAKC,SAASZ,IAAIa,MAAJ,CAAWF,EAApB,EAAwB,EAAxB,CAAX;AACAL,mBAAQwB,GAAR,CAAY,UAACb,MAAD,EAASc,KAAT,EAAmB;AAC7B,YAAId,OAAON,EAAP,KAAcA,EAAlB,EAAsB;AACpBL,uBAAQ0B,MAAR,CAAeD,KAAf,EAAsB,CAAtB;AACA,iBAAO9B,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,qBAAS,MADiB;AAE1BC,qBAAS;AAFiB,WAArB,CAAP;AAID;AACF,OARD;AASA,aAAOJ,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,OADiB;AAE1BC,iBAAS;AAFiB,OAArB,CAAP;AAID;;;iCAEYL,G,EAAKC,G,EAAK;AACrB,UAAMU,KAAKC,SAASZ,IAAIa,MAAJ,CAAWF,EAApB,EAAwB,EAAxB,CAAX;AACA,UAAIsB,oBAAJ;AACA,UAAIC,kBAAJ;AACA5B,mBAAQwB,GAAR,CAAY,UAACb,MAAD,EAASc,KAAT,EAAmB;AAC7B,YAAId,OAAON,EAAP,KAAcA,EAAlB,EAAsB;AACpBsB,wBAAchB,MAAd;AACAiB,sBAAYH,KAAZ;AACD;AACF,OALD;;AAOA,UAAI,CAACE,WAAL,EAAkB;AAChB,eAAOhC,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;AACD,UAAI,CAACL,IAAImB,IAAJ,CAASC,MAAd,EAAsB;AACpB,eAAOnB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASE,UAAd,EAA0B;AAC1B,eAAOpB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASG,YAAd,EAA4B;AAC5B,eAAOrB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASI,cAAd,EAA8B;AAC9B,eAAOtB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASK,WAAd,EAA2B;AAC3B,eAAOvB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASM,cAAd,EAA8B;AAC9B,eAAOxB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASO,MAAd,EAAsB;AACtB,eAAOzB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAImB,IAAJ,CAASQ,KAAd,EAAqB;AACrB,eAAO1B,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;;AAED,UAAM8B,gBAAgB;AACpBxB,YAAIsB,YAAYtB,EADI;AAEpBS,gBAAQpB,IAAImB,IAAJ,CAASC,MAAT,IAAmBa,YAAYb,MAFnB;AAGpBC,oBAAYrB,IAAImB,IAAJ,CAASE,UAAT,IAAuBY,YAAYZ,UAH3B;AAIpBC,sBAActB,IAAImB,IAAJ,CAASG,YAAT,IAAyBW,YAAYX,YAJ/B;AAKpBC,wBAAgBvB,IAAImB,IAAJ,CAASI,cAAT,IAA2BU,YAAYV,cALnC;AAMpBC,qBAAaxB,IAAImB,IAAJ,CAASK,WAAT,IAAwBS,YAAYT,WAN7B;AAOpBC,wBAAgBzB,IAAImB,IAAJ,CAASM,cAAT,IAA2BQ,YAAYR,cAPnC;AAQpBC,gBAAQ1B,IAAImB,IAAJ,CAASO,MAAT,IAAmBO,YAAYP,MARnB;AASpBC,eAAO3B,IAAImB,IAAJ,CAASQ,KAAT,IAAkBM,YAAYN;AATjB,OAAtB;;AAYArB,mBAAQ0B,MAAR,CAAeE,SAAf,EAA0B,CAA1B,EAA6BC,aAA7B;AACA,aAAOlC,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,MADiB;AAE1BC,iBAAS,2BAFiB;AAG1B8B;AAH0B,OAArB,CAAP;AAKD;;;;;;AAGH,IAAMC,mBAAmB,IAAIrC,iBAAJ,EAAzB;kBACeqC,gB","file":"parcels.js","sourceRoot":"C:/Users/Soji/repositories/sendit/SendIT/parcelsControllers","sourcesContent":["/* eslint-disable class-methods-use-this */\n/* eslint-disable array-callback-return */\n/* eslint-disable consistent-return */\nimport parcels from '../db/db';\nimport users from '../db/db1';\n\nclass ParcelsController {\n  getAllParcels(req, res) {\n    return res.status(200).send({\n      success: 'true',\n      message: 'Parcels retrieved successfully',\n      parcels,\n    });\n  }\n\n  getAllUsersParcels(req, res) {\n    return res.status(200).send({\n      success: 'true',\n      message: 'users parcels retreived successfully',\n      parcels: users,\n    });\n  }\n\n  getAllSpecificUserParcels(req, res) {\n    const findUser = users.find(user => user.id === parseInt(req.params.id, 10));\n    if (findUser) {\n      return res.status(200).json({\n        User: findUser,\n        message: 'A single user parcels',\n      });\n    }\n    return res.status(404).json({\n      message: 'user record not found',\n    });\n  }\n\n  getSpecificParcel(req, res) {\n    const findParcel = parcels.find(parcel => parcel.id === parseInt(req.params.id, 10));\n    if (findParcel) {\n      return res.status(200).json({\n        Parcel: findParcel,\n        message: 'A single Parcel',\n      });\n    }\n    return res.status(404).json({\n      message: 'parcel record not found',\n    });\n  }\n\n  createParcel(req, res) {\n    if (!req.body.userid) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'userid is required',\n      });\n    } if (!req.body.sendername) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'sendername is required',\n      });\n    } if (!req.body.receivername) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'receivername is required',\n      });\n    } if (!req.body.pickuplocation) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'pickuplocation is required',\n      });\n    } if (!req.body.destination) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'destination is required',\n      });\n    } if (!req.body.packagecontent) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'packagecontent is required',\n      });\n    } if (!req.body.weight) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'weight is required',\n      });\n    } if (!req.body.price) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'price is required',\n      });\n    }\n\n    const parcel = {\n      id: parcels.length + 1,\n      userid: req.body.userid,\n      sendername: req.body.sendername,\n      receivername: req.body.receivername,\n      pickuplocation: req.body.pickuplocation,\n      destination: req.body.destination,\n      packagecontent: req.body.packagecontent,\n      weight: req.body.weight,\n      price: req.body.price,\n    };\n    parcels.push(parcel);\n    return res.status(201).send({\n      success: 'true',\n      message: 'parcel added successfully',\n      parcel,\n    });\n  }\n\n  cancelParcel(req, res) {\n    const id = parseInt(req.params.id, 10);\n    parcels.map((parcel, index) => {\n      if (parcel.id === id) {\n        parcels.splice(index, 1);\n        return res.status(200).send({\n          success: 'true',\n          message: 'Parcel deleted successfuly',\n        });\n      }\n    });\n    return res.status(404).send({\n      success: 'false',\n      message: 'Parcel not found',\n    });\n  }\n\n  updateParcel(req, res) {\n    const id = parseInt(req.params.id, 10);\n    let parcelFound;\n    let itemIndex;\n    parcels.map((parcel, index) => {\n      if (parcel.id === id) {\n        parcelFound = parcel;\n        itemIndex = index;\n      }\n    });\n\n    if (!parcelFound) {\n      return res.status(404).send({\n        success: 'false',\n        message: 'parcel not found',\n      });\n    }\n    if (!req.body.userid) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'userid is required',\n      });\n    } if (!req.body.sendername) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'sendername is required',\n      });\n    } if (!req.body.receivername) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'receivername is required',\n      });\n    } if (!req.body.pickuplocation) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'pickuplocation is required',\n      });\n    } if (!req.body.destination) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'destination is required',\n      });\n    } if (!req.body.packagecontent) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'packagecontent is required',\n      });\n    } if (!req.body.weight) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'weight is required',\n      });\n    } if (!req.body.price) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'price is required',\n      });\n    }\n\n    const updatedParcel = {\n      id: parcelFound.id,\n      userid: req.body.userid || parcelFound.userid,\n      sendername: req.body.sendername || parcelFound.sendername,\n      receivername: req.body.receivername || parcelFound.receivername,\n      pickuplocation: req.body.pickuplocation || parcelFound.pickuplocation,\n      destination: req.body.destination || parcelFound.destination,\n      packagecontent: req.body.packagecontent || parcelFound.packagecontent,\n      weight: req.body.weight || parcelFound.weight,\n      price: req.body.price || parcelFound.price,\n    };\n\n    parcels.splice(itemIndex, 1, updatedParcel);\n    return res.status(201).send({\n      success: 'true',\n      message: 'Parcel added successfully',\n      updatedParcel,\n    });\n  }\n}\n\nconst parcelController = new ParcelsController();\nexport default parcelController;\n"]}