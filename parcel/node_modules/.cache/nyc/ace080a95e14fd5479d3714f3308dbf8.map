{"version":3,"sources":["parcels.js"],"names":["ParcelsController","req","res","status","send","success","message","parcels","db","db1","id","parseInt","params","map","user","parcel","body","userid","sendername","receivername","pickuplocation","destination","packagecontent","weight","price","length","push","index","splice","parcelFound","itemIndex","updatedParcel","parcelController"],"mappings":";;;;;;qjBAAA;;;AACA;;;;AACA;;;;;;;;IAEMA,iB;;;;;;;kCACUC,G,EAAKC,G,EAAK;AACtB,aAAOA,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,MADiB;AAE1BC,iBAAS,gCAFiB;AAG1BC,iBAASC;AAHiB,OAArB,CAAP;AAKD;;;uCAEkBP,G,EAAKC,G,EAAK;AAC3B,aAAOA,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,MADiB;AAE1BC,iBAAS,sCAFiB;AAG1BC,iBAASE;AAHiB,OAArB,CAAP;AAKD;;;8CAEyBR,G,EAAKC,G,EAAK;AAClC,UAAMQ,KAAKC,SAASV,IAAIW,MAAJ,CAAWF,EAApB,EAAwB,EAAxB,CAAX;AACAD,mBAAII,GAAJ,CAAQ,UAACC,IAAD,EAAU;AAChB,YAAIA,KAAKJ,EAAL,KAAYA,EAAhB,EAAoB;AAClB,iBAAOR,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,qBAAS,MADiB;AAE1BC,qBAAS,qCAFiB;AAG1BQ;AAH0B,WAArB,CAAP;AAKD;AACF,OARD;AASA,aAAOZ,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,OADiB;AAE1BC,iBAAS;AAFiB,OAArB,CAAP;AAID;;;sCAEiBL,G,EAAKC,G,EAAK;AAC1B,UAAMQ,KAAKC,SAASV,IAAIW,MAAJ,CAAWF,EAApB,EAAwB,EAAxB,CAAX;AACAF,mBAAGK,GAAH,CAAO,UAACE,MAAD,EAAY;AACjB,YAAIA,OAAOL,EAAP,KAAcA,EAAlB,EAAsB;AACpB,iBAAOR,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,qBAAS,MADiB;AAE1BC,qBAAS,+BAFiB;AAG1BS;AAH0B,WAArB,CAAP;AAKD;AACF,OARD;AASA,aAAOb,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,OADiB;AAE1BC,iBAAS;AAFiB,OAArB,CAAP;AAID;;;iCAEYL,G,EAAKC,G,EAAK;AACrB,UAAI,CAACD,IAAIe,IAAJ,CAASC,MAAd,EAAsB;AACpB,eAAOf,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASE,UAAd,EAA0B;AAC1B,eAAOhB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASG,YAAd,EAA4B;AAC5B,eAAOjB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASI,cAAd,EAA8B;AAC9B,eAAOlB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASK,WAAd,EAA2B;AAC3B,eAAOnB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASM,cAAd,EAA8B;AAC9B,eAAOpB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASO,MAAd,EAAsB;AACtB,eAAOrB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASQ,KAAd,EAAqB;AACrB,eAAOtB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;;AAED,UAAMS,SAAS;AACbL,YAAIF,aAAGiB,MAAH,GAAY,CADH;AAEbR,gBAAQhB,IAAIe,IAAJ,CAASC,MAFJ;AAGbC,oBAAYjB,IAAIe,IAAJ,CAASE,UAHR;AAIbC,sBAAclB,IAAIe,IAAJ,CAASG,YAJV;AAKbC,wBAAgBnB,IAAIe,IAAJ,CAASI,cALZ;AAMbC,qBAAapB,IAAIe,IAAJ,CAASK,WANT;AAObC,wBAAgBrB,IAAIe,IAAJ,CAASM,cAPZ;AAQbC,gBAAQtB,IAAIe,IAAJ,CAASO,MARJ;AASbC,eAAOvB,IAAIe,IAAJ,CAASQ;AATH,OAAf;AAWAhB,mBAAGkB,IAAH,CAAQX,MAAR;AACA,aAAOb,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,MADiB;AAE1BC,iBAAS,2BAFiB;AAG1BS;AAH0B,OAArB,CAAP;AAKD;;;iCAGYd,G,EAAKC,G,EAAK;AACrB,UAAMQ,KAAKC,SAASV,IAAIW,MAAJ,CAAWF,EAApB,EAAwB,EAAxB,CAAX;AACAF,mBAAGK,GAAH,CAAO,UAACE,MAAD,EAASY,KAAT,EAAmB;AACxB,YAAIZ,OAAOL,EAAP,KAAcA,EAAlB,EAAsB;AACpBF,uBAAGoB,MAAH,CAAUD,KAAV,EAAiB,CAAjB;AACA,iBAAOzB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,qBAAS,MADiB;AAE1BC,qBAAS;AAFiB,WAArB,CAAP;AAID;AACF,OARD;AASA,aAAOJ,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,OADiB;AAE1BC,iBAAS;AAFiB,OAArB,CAAP;AAID;;;iCAEYL,G,EAAKC,G,EAAK;AACrB,UAAMQ,KAAKC,SAASV,IAAIW,MAAJ,CAAWF,EAApB,EAAwB,EAAxB,CAAX;AACA,UAAImB,oBAAJ;AACA,UAAIC,kBAAJ;AACAtB,mBAAGK,GAAH,CAAO,UAACE,MAAD,EAASY,KAAT,EAAmB;AACxB,YAAIZ,OAAOL,EAAP,KAAcA,EAAlB,EAAsB;AACpBmB,wBAAcd,MAAd;AACAe,sBAAYH,KAAZ;AACD;AACF,OALD;;AAOA,UAAI,CAACE,WAAL,EAAkB;AAChB,eAAO3B,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;AACD,UAAI,CAACL,IAAIe,IAAJ,CAASC,MAAd,EAAsB;AACpB,eAAOf,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASE,UAAd,EAA0B;AAC1B,eAAOhB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASG,YAAd,EAA4B;AAC5B,eAAOjB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASI,cAAd,EAA8B;AAC9B,eAAOlB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASK,WAAd,EAA2B;AAC3B,eAAOnB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASM,cAAd,EAA8B;AAC9B,eAAOpB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASO,MAAd,EAAsB;AACtB,eAAOrB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID,OAAC,IAAI,CAACL,IAAIe,IAAJ,CAASQ,KAAd,EAAqB;AACrB,eAAOtB,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,OADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;;AAED,UAAMyB,gBAAgB;AACpBrB,YAAImB,YAAYnB,EADI;AAEpBO,gBAAQhB,IAAIe,IAAJ,CAASC,MAAT,IAAmBY,YAAYZ,MAFnB;AAGpBC,oBAAYjB,IAAIe,IAAJ,CAASE,UAAT,IAAuBW,YAAYX,UAH3B;AAIpBC,sBAAclB,IAAIe,IAAJ,CAASG,YAAT,IAAyBU,YAAYV,YAJ/B;AAKpBC,wBAAgBnB,IAAIe,IAAJ,CAASI,cAAT,IAA2BS,YAAYT,cALnC;AAMpBC,qBAAapB,IAAIe,IAAJ,CAASK,WAAT,IAAwBQ,YAAYR,WAN7B;AAOpBC,wBAAgBrB,IAAIe,IAAJ,CAASM,cAAT,IAA2BO,YAAYP,cAPnC;AAQpBC,gBAAQtB,IAAIe,IAAJ,CAASO,MAAT,IAAmBM,YAAYN,MARnB;AASpBC,eAAOvB,IAAIe,IAAJ,CAASQ,KAAT,IAAkBK,YAAYL;AATjB,OAAtB;;AAYAhB,mBAAGoB,MAAH,CAAUE,SAAV,EAAqB,CAArB,EAAwBC,aAAxB;;AAEA,aAAO7B,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,MADiB;AAE1BC,iBAAS,2BAFiB;AAG1ByB;AAH0B,OAArB,CAAP;AAKD;;;;;;AAGH,IAAMC,mBAAmB,IAAIhC,iBAAJ,EAAzB;kBACegC,gB","file":"parcels.js","sourceRoot":"C:/Users/Soji/repositories/sendit/SendIT/parcel/parcelsControllers","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport db from '../db/db';\nimport db1 from '../db/db1';\n\nclass ParcelsController {\n  getAllParcels(req, res) {\n    return res.status(200).send({\n      success: 'true',\n      message: 'Parcels retrieved successfully',\n      parcels: db,\n    });\n  }\n\n  getAllUsersParcels(req, res) {\n    return res.status(200).send({\n      success: 'true',\n      message: 'users parcels retreived successfully',\n      parcels: db1,\n    });\n  }\n\n  getAllSpecificUserParcels(req, res) {\n    const id = parseInt(req.params.id, 10);\n    db1.map((user) => {\n      if (user.id === id) {\n        return res.status(200).send({\n          success: 'true',\n          message: 'user parcels retrieved successfully',\n          user,\n        });\n      }\n    });\n    return res.status(404).send({\n      success: 'false',\n      message: 'user does not exist',\n    });\n  }\n\n  getSpecificParcel(req, res) {\n    const id = parseInt(req.params.id, 10);\n    db.map((parcel) => {\n      if (parcel.id === id) {\n        return res.status(200).send({\n          success: 'true',\n          message: 'Parcel retrieved successfully',\n          parcel,\n        });\n      }\n    });\n    return res.status(404).send({\n      success: 'false',\n      message: 'Parcel does not exist',\n    });\n  }\n\n  createParcel(req, res) {\n    if (!req.body.userid) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'userid is required',\n      });\n    } if (!req.body.sendername) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'sendername is required',\n      });\n    } if (!req.body.receivername) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'receivername is required',\n      });\n    } if (!req.body.pickuplocation) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'pickuplocation is required',\n      });\n    } if (!req.body.destination) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'destination is required',\n      });\n    } if (!req.body.packagecontent) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'packagecontent is required',\n      });\n    } if (!req.body.weight) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'weight is required',\n      });\n    } if (!req.body.price) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'price is required',\n      });\n    }\n\n    const parcel = {\n      id: db.length + 1,\n      userid: req.body.userid,\n      sendername: req.body.sendername,\n      receivername: req.body.receivername,\n      pickuplocation: req.body.pickuplocation,\n      destination: req.body.destination,\n      packagecontent: req.body.packagecontent,\n      weight: req.body.weight,\n      price: req.body.price,\n    }\n    db.push(parcel);\n    return res.status(201).send({\n      success: 'true',\n      message: 'parcel added successfully',\n      parcel,\n    });\n  }\n\n\n  cancelParcel(req, res) {\n    const id = parseInt(req.params.id, 10);\n    db.map((parcel, index) => {\n      if (parcel.id === id) {\n        db.splice(index, 1);\n        return res.status(200).send({\n          success: 'true',\n          message: 'Parcel deleted successfuly',\n        });\n      }\n    });\n    return res.status(404).send({\n      success: 'false',\n      message: 'Parcel not found',\n    });\n  }\n\n  updateParcel(req, res) {\n    const id = parseInt(req.params.id, 10);\n    let parcelFound;\n    let itemIndex;\n    db.map((parcel, index) => {\n      if (parcel.id === id) {\n        parcelFound = parcel;\n        itemIndex = index;\n      }\n    });\n\n    if (!parcelFound) {\n      return res.status(404).send({\n        success: 'false',\n        message: 'parcel not found',\n      });\n    }\n    if (!req.body.userid) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'userid is required',\n      });\n    } if (!req.body.sendername) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'sendername is required',\n      });\n    } if (!req.body.receivername) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'receivername is required',\n      });\n    } if (!req.body.pickuplocation) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'pickuplocation is required',\n      });\n    } if (!req.body.destination) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'destination is required',\n      });\n    } if (!req.body.packagecontent) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'packagecontent is required',\n      });\n    } if (!req.body.weight) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'weight is required',\n      });\n    } if (!req.body.price) {\n      return res.status(400).send({\n        success: 'false',\n        message: 'price is required',\n      });\n    }\n\n    const updatedParcel = {\n      id: parcelFound.id,\n      userid: req.body.userid || parcelFound.userid,\n      sendername: req.body.sendername || parcelFound.sendername,\n      receivername: req.body.receivername || parcelFound.receivername,\n      pickuplocation: req.body.pickuplocation || parcelFound.pickuplocation,\n      destination: req.body.destination || parcelFound.destination,\n      packagecontent: req.body.packagecontent || parcelFound.packagecontent,\n      weight: req.body.weight || parcelFound.weight,\n      price: req.body.price || parcelFound.price,\n    };\n\n    db.splice(itemIndex, 1, updatedParcel)\n\n    return res.status(201).send({\n      success: 'true',\n      message: 'Parcel added successfully',\n      updatedParcel,\n    });\n  }\n}\n\nconst parcelController = new ParcelsController();\nexport default parcelController;\n"]}